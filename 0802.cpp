////  例8。2，利用重载运算符实现复数类对象的算数四则运算//  ccc////  Created by 何慧君 on 2016/11/23.//  Copyright © 2016年 何慧君. All rights reserved.////#include <iostream>#include <math.h>using namespace std;class complex{public:    complex()    { real=imag=0;}    complex(double r,double i)    {        real=r; imag=i;    }    complex operator +(const complex &c);    complex operator -(const complex &c);    complex operator *(const complex &c);    complex operator /(const complex &c);    friend void print(const complex &c);private:    double real,imag;};inline complex complex::operator +(const complex &c){    return complex(real+c.real,imag+c.imag);}inline complex complex::operator -(const complex &c){    return complex(real-c.real,imag-c.imag);}inline complex complex::operator *(const complex &c){    return complex(real*c.real-imag*c.imag,                   real*c.imag+imag*c.real);}inline complex complex::operator /(const complex &c){    return complex((real*c.real+imag*c.imag)/                   (c.real*c.real+c.imag*c.imag),                   (imag*c.real-real*c.imag)/                   (c.real*c.real+c.imag*c.imag));}void print(const complex &c){    if(c.imag<0)        cout<<c.real<<c.imag<<'i';    else        cout<<c.real<<'+'<<c.imag<<'i';}void CountArithmetic()//当前为子程序写法，作为主程序单独运行时应写为int main(){    cout<<"程序说明：利用重载运算符实现复数类对象的算数四则运算。以下程序开始：\n"<<endl;    complex c1(2.0,3.0),c2(4.0,-2.0),c3;    c3=c1+c2;    cout<<"\nc1+c2=";    print(c3);    c3=c1-c2;    cout<<"\nc1-c2=";    print(c3);    c3=c1*c2;    cout<<"\nc1*c2=";    print(c3);    c3=c1/c2;    cout<<"\nc1/c2=";    print(c3);    c3=(c1+c2)*(c1-c2)*c2/c1;    cout<<"\n(c1+c2)*(c1-c2)*c2/c1=";    print(c3);    cout<<endl;}/*输出结果 c1+c2=6+1i c1-c2=-2+5i c1*c2=14+8i c1/c2=0.45+0.8i (c1+c2)*(c1-c2)*c2/c1=9.61538+25.2308i */